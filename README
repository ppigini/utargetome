

UTARGETOME: TARGETOME PREDICTION PIPELINE FOR ENGINEERED U1 SMALL NUCLEAR RNAs

Table of contents:
1. Rationale
2. Software requirements
3. Executing utargetome
4. Custom search settings
5. Interpreting results
6. Developers
7. License


###########################################################################


1. Rationale

Utargetome is a computational tool based on the BLAST algorithm that predicts the potential targets (targetome) of engineered U1-snRNAs. These U1-snRNAs are usually designed with a customized antisense sequence targeting mutated donor splice sites, and the main goal of this procedure is to enhance the specificity and safety of their clinical application by designing snRNAs with minimized off-target effects.

The rationale behind the prediction pipeline is based on the following principles:

• The search for targets is conducted across all genomic sequences that produce annotated transcripts.

• Targets are categorized based on their location within exons or introns, or their proximity to donor (5'-SSs) or acceptor splice sites (3'-SSs).

• Targets that are found on different annotated transcripts but that correspond to the same genomic sequence are considered as distinct targets, as they may have different effects.

• Targets that result from different annealing registers but occupy the same position within the same transcript (sharing the same 5'-most position) are considered as a single target.


###########################################################################


2. Software requirements

Utargetome has the following software requirements:

• It can be executed either in macOS or Linux environments.

• Python 3.9.18 must be executable from terminal with the command:

  % python

  The specific version of Python can be installed from the following site:

  https://www.python.org/downloads/

  Also, make sure that the following packages for Python are already installed: “os”, “itertools”.

• BLAST 2.14.1+ must be executable from terminal with the following command:

  % blastn

  The specific version of BLAST can be installed from the following directory of the NCBI site:

  https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/

Importantly, utargetome has been developed, tested and validated using an 8-core CPU and 32 GB of RAM in macOS, integrating Python 3.9 and BLAST 2.14.1+. Newer or older versions of Python and BLAST might work as well, but they have not been tested.


###########################################################################


3. Executing utargetome

Utargetome can be executed from terminal using its executable file (which can be found within the package folder) as follows:

% .../utargetome/utargetome_exe

In case it is necessary, the utargetome file can be made executable using chmod:

% chmod a+x .../utargetome/utargetome_exe
% .../utargetome/utargetome_exe

The following directories must be provided after executing utargetome:

• The query file, which must be in .fa format. All U1s in the query file must have the same length, and it is recommended not to include any additional ">" in the U1 name. An example query file containing the antisense sequences of the human endogenous U1 (“>U1_endogenous”) and its reverse-complementary control (">U1_control") is provided along with the utargetome package. 

• The genome assembly file, which must be in .fna format. The recommended release is GRCh38, and it can be downloaded from the following site:

  https://ftp.ncbi.nlm.nih.gov/refseq/H_sapiens/annotation/GRCh38_latest/refseq_identifiers/

• The genome annotation file, which must be in .gz format. The recommended release is GRCh38.108, and can be downloaded from the following site:

  https://ftp.ensembl.org/pub/release-108/gtf/homo_sapiens/

• The directory for the output files. All files will be found within the folder utargetome_output/. Note that each execution will first delete all the files in the folder and will then generate new files. For results interpretation please refer to the section below (5. Interpreting results).

After providing the input directories, utargetome will ask whether to proceed with default or custom search settings. For custom settings please refer to the section below (4. Custom search settings). Default settings will take as input 11 nt-long sequences and search for all targets across exons and introns, or overlapping with 5'-SSs or 3'-SSs, considering at least 9 base-pairings in any type of annealing register; in addition to the normal output files with target counts, target coordinates will be printed for 5'-SSs.

NOTE* Please note that the warning message ‘Warning: [blastn] Query is Empty!’ can be ignored.

NOTE** If the blastn database has already been generated in a previous run, it will be used in the current run without generating a new one, therefore saving processing time.

NOTE*** Please note that the files in the “pipeline_targetome/temp/” folder could have a large size, especially for large lists of input sequences and/or for analyses that include many mismatches. For example, targetome prediction for 50 U1 sequences could generate up to 100 GB of files if allowing up to 3 mismatches in all the annealing registers.

NOTE**** Utargetome takes from 30 to 60 minutes to predict the targetome of 2 input sequences with default search settings and using an 8-core CPU and 32 GB of RAM.


###########################################################################


4. Custom search settings

The following search settings can be customized when running utargetome:

• "database": it defines in which collection of sequences the off-targets must be searched; the following options should be specified (possible choices: “yes/no”):

  •• "exons": it includes all annotated exons from all annotated genes (excluding mitochondrial genes);

  •• "introns": it includes all annotated introns from all annotated genes (excluding mitochondrial genes); note that the “introns” databases is divided into chunks, and each chunk is searched separately;

  •• "5SSs": it includes the region spanning from position -100 to +100 around the donor splice site (5’-SS) of all annotated exons from all annotated genes (excluding mitochondrial genes);

  •• "3SSs": it includes the region spanning from position -100 to +100 around the acceptor splice site (3’-SS) of all annotated exons from all annotated genes (excluding mitochondrial genes);

• "registers": it defines which annealing registers and how many mismatches (up to 7, including the mismatches generated by the alternative structure) must be tolerated between the U1 and the target sequence; the values indicate the number of base-pairs between the antisense strand and the target strand; the following options should be specified:

  •• "full": it indicates the annealing register without any alternative structure, except for mismatches; the value must be set as: (antisense length – 7) ≤ value ≤ (antisense length); the null option (the register is excluded from the analysis) can be set as “no”;

  •• "BS1": it indicates the annealing register carrying a single-nucleotide bulge on the target strand; the value must be set as: (antisense length – 7) ≤ value ≤ (antisense length); the null option (the register is excluded from the analysis) can be set as “no”;

  •• "BS2": it indicates the annealing register carrying a double-nucleotide bulge on the target strand; the value must be set as: (antisense length – 7) ≤ value ≤ (antisense length); the null option (the register is excluded from the analysis) can be set as “no”;

  •• "BA1": it indicates the annealing register carrying a single-nucleotide bulge on the antisense strand; the value must be set as: (antisense length – 7) ≤ value ≤ (antisense length – 1); the null option (the register is excluded from the analysis) can be set as “no”;

  •• "BA2": it indicates the annealing register carrying a double-nucleotide bulge on the antisense strand; the value must be set as: (antisense length – 7) ≤ value ≤ (antisense length – 2); the null option (the register is excluded from the analysis) can be set as “no”;

  •• "ALS": it indicates the annealing register carrying an asymmetric loop with the long strand on the target sequence; the value must be set as: (antisense length – 7) ≤ value ≤ (antisense length – 1); the null option (the register is excluded from the analysis) can be set as “no”;

  •• "ALA": it indicates the annealing register carrying an asymmetric loop with the long strand on the antisense sequence; the value must be set as: (antisense length – 7) ≤ value ≤ (antisense length – 2); the null option (the register is excluded from the analysis) can be set as “no”;

• "positions": it defines in which positional range the targets for 5-SSs or 3-SSs must be searched;the following options should be specified:

  •• "5SSs"

  •• "3SSs"

  the following choices can be specified for each option:

  •• "range": it includes all positions within a range from -50 to +50 from the splice site; 

  •• "cumulative": it merges the counts for all the positions included between -10 and +25 for 5-SSs, and between -10 and + 1 for 3-SSs;

  •• "overlapping": it includes any target overlapping with the splice site;;
  •• "n1,n2,n3,...n": it where “n” is any single value included between (or equal to) -50 and +50 and it indicates the position of the 5’-most nucleotide of the target sequence (multiple values must be comma-separated with no space).

• "print": it defines whether to print in a separate file targets' coordinates found specific datasets (possible choices: “yes/no”);

• "partitions": it defines how many partitions should be generated for the databases; the default value is 1, but it can be increased (natural numbers only) to reduce the demand of processing power.


###########################################################################


5. Interpreting results

The prediction results can be found in the folder utargetome_output/. Example output files generated with default search settings from the example query file are provided along with the utargetome package.

Target counts are in tab format and are sorted in different files based on the analyzed database (“counts_exons.txt”, “counts_introns.txt”, “counts_5SSs.txt” or “counts_3SSs.txt”). In each file, counts are displayed for each annealing register ("full", "BS1", "BS2", "BA1", "BA2", "ALS", "ALA") or annealing register with allowed mismatches ("mm"); for example, "BS1.mm3" indicates off-targets with a single-nucleotide bulge on the sense strand. Target counts are also indicated for all annealing registers grouped together based on the minimum number of annealed base-pairs (e.g. "full+BS1+BS2", "full+full.mm1+BS1+BS1.mm1+BS2+BS2.mm1+BA1+ALS", etc.).  

Target coordinates are also listed in different files based on the analyzed database (“targets_exons.txt”, “targets_introns.txt”, “targets_5SSs.txt” or “targets_3SSs.txt”). For each target all possible annealing registers are indicated. These files are generated only if explicitly indicated in the custom search settings.


###########################################################################


6. Developers

Paolo Pigini, PhD

Federico Manuel Giorgi, Professor of Genomics


###########################################################################


7. License

This project is licensed under the MIT License, which requires proper attribution as described in the LICENSE file.

**Academic Citations: If you use this code in your academic work, we kindly request that you cite it as follows: [Author Name(s), Project Name, GitHub URL]. Please contact us if you have any questions or need more information for citations.

**Commercial Use: Commercial users are encouraged to contact us for a separate commercial use agreement that may include terms related to licensing, royalties, and revenue sharing. Such an agreement will be negotiated independently of this license.

For full details, see the LICENSE file.

